
*-*-*-*-*-*-*
Changelog:
*-*-*-*-*-*-*
10/14/20
------
- Updated the stream format to fit the Delobotomizer
- Fixed the web interface not appearing (had an extra 'undefined' in the session initialization)

7/16/20
------
- Generalization: One-liners and commands to control device stream format compatibility e.g. different delimiters and ratio or timer positions, this auto propagates to the CSV recording as well.
- Other cleanup, getting ready for more feature updates.

6/2/20
------
- reverted CSV function in HEGwebAPI (it has the new one too, just not dumping raw data due to noise issues)
- fixed Chrome extension csv printing for serial and bluetooth


6/1/20
------
0.0.10
- Reworked audio system for the AudioJS, fixed the audio feedback (not sure how I broke it!)
- 2 more audio visualizers
- better colors on CircleJS
- tweaked Hill Climber
- Generalized the CSV function
- SoundJS has a recording function you can use, default set for audio recording but can do video, requires a SoundJS class to be set (either when audio is active or through the console)
- SerialUtils.js for the Chrome Extension now has recording and monitoring functions (the monitor is not set up yet on the front end)
- Separated the javascript on the webDemo.html into initWebapp.js for parity with the Chrome Extension
- geolocateJS created for an interesting project

TODO: 
- Make performant serial monitor front end, 
- geolocate.js interactive features - heat maps!
- work on BCIjs integration for EEG data (I need to get ahold of one with a generic data stream) on extension, 
- more visuals, 
- better recording menu.

5/26/20
------
0.0.9
- Added a Sound scripting system, allows arrays of frequencies and sound files to be buffered and used individually.
- Added sound options to HillJS and CircleJS, just simple tones to help indicate the feedback.
- Added a new mode to HillJS, it looks a lot nicer now.
- Some minor fixes

5/1/20
------
- Fixed BLE output format, optimized general output method

4/3/20
------
- USB only mode introduced via command 'u' or toggling on the Connections Settings page at 192.168.4.1/connect or esp32.local/connect
- Fixed the autoscaling on negative graph values (there was none, oops)
- General stability testing, everything seems OK, get your device up to date!

3/28/20
------
- Tooltips!
- New Video mode, control the current time of the video just like HEGstudio! It's officially obsolete. No sound in this mode, but it would probably sound pretty bad.


3/26/20
------
- Fixed the HTML5 page code (didn't paste it correctly)
- Added sleep mode, now the device shuts off after 10 minutes of inactivity. It won't shut off if you are accessing web pages or running the core program, or updating. To turn it back on simply press the reset button or re-plug the power in. This will get more sophisticated to allow remote waking-up.

3/24/20
------
- Reintroduced Bluetooth Serial (surprisingly low footprint on top of BLE). Works like standard USB but requires pairing first. 2 Com ports show up for me when enabled, you want the first one. The one that lets you send commands is the one you want.
- Some bug fixes
- Working on a new video feedback mode
- Separate changelog

3/20/20
------
- Fixed EventSource stream for remote streaming. Updated UI for the changes.
- Added a TextReader feedback option.
- Chrome Extension port of webAPI, with Serial USB support coming. Much easier to code bigger apps in this.
- Microsoft Edge beta supports this UI, and might support the Chrome Extension too.

3/14/20
------
- Added more BLE commands
- Re-added alternative ADS1115 library setup, which is fully programmable up to the full sampling rate (with variable consistency in the data)

3/2/20
------
- Updated SMA function, added basic fault testing for ratio (within 25% error)
- Fixed Annotating
- Some minor tweaks here and there
- DataCharter.html introduced, it's IFrame-ready and meshes with JSON, will soon also be loaded as an online-only option for the firmware. See it in action at hegalpha.com/data (account required)

2/26/20
------
- Fixed yoffset slider (changed a + to a - for the y-axis text)
- Timer now shows minutes and seconds proper.
- Touched up Update page
- Touched up ThreeJS demo colors

2/20/20
------
- Added a formal Reset Session button (instead of reloading page)
- Seconds passed approximation in graph.
- ThreeJS demonstration is even prettier now. 

2/19/20
------
- Added postprocessing fx to threejs demo
- More code cleanup.

2/18/20
------
- Major improvements to code flow
- Conditional ThreeJS integration (auto detects if you are online or not and attempts to add Three.js.min)
- Globe turning exercise to demonstrate ThreeJS and how easy modding is.
- Other minor fixes to feedback and UI.
- Updated env to latest ESP32 release.

2/14/20
------
- Y offset slider
- Fixed fade mode (the CSS needed tweaking)

2/13/20
------
- Exposed method to change event source hosts, for clients not hosted on-board but still on the same network. This opens up more web development capabilities.
- Scoring sensitivity slider can now got to X10, though this is pretty unnecessary.

2/11/20
------
- Graph can now be switched between the score and ratio
- Added Timestamped annotating that will show up in the session CSVs
- Fixed one thing with the x scale slider, the graph crash bug is still there
- Some other API rearrangements

2/7/20
------
- AudioJS options - volume slider and an option for decoupling the volume feedback.
- Fixed HillJS. It's not that great but it's a bit more responsive than before. I need to add more compelling visual feedback.
- Index page update
- Timer actually shows the session time and not the microcontroller clock
- More UI cleanup

2/6/20
------
- Major improvements to UI layout
- API improvements for better generalization (still WIP)
- Custom video controls, show/hide controls
- CircleJS, AudioJS, and HillJS touched up. HillJS is basically unresponsive but I'm working on it next.
- Some cleanup
- IE/Edge will not be supported by the on-board training demos until it is updated to ES8 standards (due to lack of arrow functions, mainly) or until I or others make compatible scripts, still need to test more mobile compatibility as well as understand why some laptops are not compatible.

1/31/20
------
- Minor changes and fixes to UI and javascript

1/22/20
------
- Major mobile-friendly UI updates to web interface page (Alpha 0.0.1 for the interface)
- Changes to data outputs (replaced rSlope and A.I. with velocity and acceleration (voltage units / ms and voltage units / ms ^2). 1 ADC unit = 0.256mV so if Vel = 1 that's +0.256mV gained per millisecond
- Cleanup of HEG.h code.
- Testing notes: 
   -- Some power sources cause unstable readings. Try different power sources.
   -- Different computers/phones seem to have different compatibility errors for the same software (e.g. one laptop not working with Microsoft Edge and another one working great) - not totally sure why.
12/16/19
------
- updated front page, connection page, and help page. Now with version number visible on main page.
- the web API lets you set an arbitrary host for the event source now for quicker remote play (set host with a new HEGwebAPI(parentId,defaultUI,**hostIP**))
 
12/14/19
------
- Made standalone /api page with uninitialized JS api and CSS available for external use.

12/10/19
------
- Rolled back ADC library due to too much instability.

12/8/19
------
- Fixed sampling issues. Now doing 3 samples per LED (and ambient) for 20sps solid over USB, WiFi, and BLE.
- Fixed BLE (thanks Diego!)

12/3/19
------
- Changed ADS1115 libraries to the addicore version (via on i2cdevlib)
- Upped sample rate to 475sps, ratio rate (with ambient cancellation) should now be ~133 at full speed over Serial.
- Fixed Serial commands not being responsive
- Removed "T" test command for now.

11/25/19
------
- fix LEDs not shutting off when pausing HEG
- lowered power consumption
- fixed circleJS in web API

Known bugs:
- Serial USB commands don't register very well 
- ADC anomalies with WiFi (probably power consumption related)
- xOffset bugged when changing xScale and xOffset together

To Do:
- Use a better ADS1115 lib to improve speed
- Web Demo CSS and functionality improvements
- IE and Edge can't find the HEGwebAPI.js script (this is likely the same issue on mobile)

11/11/19
------
- fix web api and hegstudio to match changes

11/9/19
------
- removed sav lay filter (do it on front end instead after checking data)

11/4/19
------
- ADC error check in HEG.h (to deal with a webserver bug), use 'A' to toggle. 
- Add progress events for /update page.

KNOWN BUGS:
The error checker can cause hangups and overheat the chip, don't use it yet

11/3/19
------
-webDemo now filters bad data out for a smoother experience, to compensate for a bug mainly
-testing threading to try to fix wifi data streaming errors. Turn sensor off and on if connecting online while sensor is active. (very particular not often-gonna-happen bug)

Known bugs:
The wifi connection causes errors in the ADC readings for some reason, need to fix this
to make the sav lay filters usable over web.

10/29/19
------
-/discovery page for testing device scanning from mobile
-Reimplemented ambient noise cancelling and added a read_differential mode. Works much better like this, closer to the original!
-/help page (BIG work in progress)

10/21/19
------
-connect page now has a suggest IP option. Return to the /connect page after reconnecting to the access point.
If it works correctly you get booted to the main page and can go straight to the /connect page again, scroll down, and see the suggested info above the wifi scan text.
-proof of concept hill climb game
-more cleanup (not all the way there yet)

More to do:
Audio mode that just plays a tone that gets louder or quieter? 
Device search on local wifi when in STA mode.
More controls for modes.

10/18/19
------
-integrated audio mode
-added volume feedback for video option
-code feng shui improvements

FYI: not all buttons hooked up yet

Known bugs:
-not every browser works on canvas demo
-poor audio quality on visualizer mode - try manual buffering. Bug not present in standalone visualizer.
-offset button bugged when offsetting more than the number of graph vertices (look at xoffsetSlider.onclick setting)

10/17/19
------
smooth mode switching on demo page. Audio and hill climbing (LIFE game re-creation) games incoming.
change graph to show cumulative SMA 1s - 2s slope changes. This math is a simple noise filter that is still reactive to the current information, which can overcome noise issues. 
split code up into multiple files to fit a cleaner traditional webapp format.
web api improving and generalizing rapidly
can set primary/secondary dns if needed, smart config type stuff incoming.

couple bugs:
X offset slider still, it's 3 lines of code causing a problem.
the replay function works fine but goes over the index when resetting the data. This bit will be re-done as the code is spaghetti.

10/14/19
------
-x offset bar. Has a bug when offsetting when graph scale is lower than the array being sliced. page has to be reloaded if red line vanishes.
-Even classier, almost finished streamlining code.
-integrated hegvid code with main page, need to create options to swap once finished generalizing the data handling. this will be smoooooth


10/13/19
------
webGL graphing API improvements. More to come.
WIP Object-oriented web API on canvas demo page. Final suite will be completely class-based.
Sensitivity slider.
/hegvid -> /video (this page will be integrated with the main demo)


More TODO:
Audio visualizer (HTML5 has sweet built-in tools)
CSS Overhaul w/ animations. Utilize webkit/moz/mobile libs.
Fix mobile support for web demo (mostly requires permissions changes)

10/11/19
-----
/hegvid page improvements/experiments. Can load local video files (web URLs next, some site embedding like Vimeo MIGHT work)


10/10/19
-----
CSV Save/Load functions added.
Graphing improved, canvas demo fairly playable now. 
Waiting on new pcbs to get definitive data after fixing noise issues in designs.
GraphJS wrapper class for graphing.

TODO:
graph upgrades
reformat functions and variables into respective classes to reduce bloat.
sliders for exploring data
create SPIFFS js packages? That way we can break up essential functions on the webAPI and reduce bloat or add third party packages easily.
hegstudio brightness exercise recreation is easiest to do with default <video> tag and a transparency overlay.
Fix spaghetti

10/6/19
-----
Fixed crash when changing wifi modes
Add static IP settings. 
Working on WebGL based graphing and video controls. /hegvid wip


10/1/19
------
Canvas demo
Really basic navigation on index page
Fix websocket page to use js to call the hostname in case of esp32.local being used.
More POST commands, also added text input-based command method as an option, only send single char.

9/9/19
------
EventSource works great!

More TODO:
Make connect page notify the user of the new IP address if esp32.local is not fixed.
Convert websockets to drive commandESP32

9/5/19
------
TODO:
Data visualizer. HEG Life game in canvas?
Stress testing - try EventSource instead of Websockets. Websockets can overflow and crash the ESP32 easily if there is lag clientside.
Login interface?
HTML interface to use commandESP32

9/5/2019
------
Fixed OTA, update boards.txt and default.csv in their respective folders (see above install instructions)
Changed setup loop so wifi is always chosen if EEPROM.read(0) is not 1 for BLE.


9/3/19
------
Included BLE support. toggle BLE/WIFI with 'b', BLE default off due to conflict with WiFi
Websockets and HEG now on separate threads so sensor speed is not impacted - WS speed set at 13.33 updates/sec as it's stable. Max = 16/sec
/update broken. Gotta fix it.
Lots of housekeeping to keep workflow easy, tested the freeRTOS threading system a ton.
commandESP32 now in WiFi_API.h.
